
unsigned int KEY_main_page[]=  //最后离开时页面编号8  用
{
	0x101,0x201,0x301,0x401,0x501,0x601,0x701
};

//串口屏**********
const unsigned int ERR_code_com[][10]=    //串口屏故障代码
{
 {0x2020,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020},   //0空着
 {0xB9A6,0xC2CA,0xC4A3,0xBFE9,0xB9CA,0xD5CF,0x2020,0x2020,0x2020,0x2020},	//1功率模块故障
 {0xC8ED,0xBCFE,0xB9FD,0xC1F7,0xB8E6,0xBEAF,0x2020,0x2020,0x2020,0x2020},      //2软件过流告警
 {0xCFB5,0xCDB3,0xBDBB,0xC1F7,0xB9FD,0xD1B9,0xB8E6,0xBEAF,0x2020,0x2020},	//3系统交流过压警告
 {0xD6B1,0xC1F7,0xB2E0,0xB9FD,0xD1B9,0xB8E6,0xBEAF,0x2020,0x2020,0x2020},	//4直流侧过压警告
 {0xB5E7,0xCDF8,0xCDAC,0xB2BD,0xB4ED,0xCEF3,0xB9CA,0xD5CF,0x2020,0x2020},	//5电网同步错误故障
 {0xD4A4,0xB3E4,0xB5E7,0xB3AC,0xCAB1,0xB9CA,0xD5CF,0x2020,0x2020,0x2020},	//6预充电超时故障
 {0xCFB5,0xCDB3,0xBDBB,0xC1F7,0xC7B7,0xD1B9,0xB8E6,0xBEAF,0x2020,0x2020},	//7系统交流欠压告警
 {0xBFB4,0xC3C5,0xB9B7,0xB3AC,0xCAB1,0xB8E6,0xBEAF,0x2020,0x2020,0x2020},	//8看门狗超时告警
 {0xC4E6,0xB1E4,0xCAE4,0xB3F6,0xB3F6,0xB4ED,0xB9CA,0xD5CF,0x2020,0x2020},	//9逆变输出出错故障
 {0xC8B1,0xCFE0,0xB9CA,0xD5CF,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020},	//10缺相故障
 {0xCFE0,0xD0F2,0xB4ED,0xCEF3,0xB9CA,0xD5CF,0x2020,0x2020,0x2020,0x2020},	//11相序错误故障
 {0xD6B1,0xC1F7,0xB5E7,0xD1B9,0xB2BB,0xC6BD,0xBAE2,0xB8E6,0xBEAF,0x2020},   //12直流电压不平衡告警
 {0xB9FD,0xCEC2,0xB9CA,0xD5CF,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020},	//13过温故障
 {0xBCB1,0xCDA3,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020},	//14急停
 {0xC9A2,0xC8C8,0xC6F7,0xB9FD,0xCEC2,0xB9CA,0xD5CF,0x2020,0x2020,0x2020},	//15散热器过温故障
 {0xBBA5,0xB8D0,0xC6F7,0xB5E7,0xC1F7,0xB3AC,0xCFDE,0xB9CA,0xD5CF,0x2020},   //16互感器电流超限故障
 {0xC4A3,0xBFE9,0xB2BB,0xC6BD,0xBAE2,0xB9CA,0xD5CF,0x2020,0x2020,0x2020},   //17模块不平衡故障
 {0xB7E7,0xBBFA,0xB9CA,0xD5CF,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020},   //18风机故障
 {0xC9E8,0xB1B8,0xD4CB,0xD0D0,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020},	//19设备运行
 {0xC9E8,0xB1B8,0xCDA3,0xD6B9,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020},	//20设备停止
 {0xC9E8,0xB1B8,0xD7D4,0xC6F4,0xB6AF,0x2020,0x2020,0x2020,0x2020,0x2020},	//21设备自启动
 {0xC9E8,0xB1B8,0xB4FD,0xBBFA,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020},	//22设备待机
 {0xC9E8,0xB1B8,0xBCB1,0xCDA3,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020},	//23设备急停
 {0xCDA8,0xD1B6,0xD6D0,0xB6CF,0xB9CA,0xD5CF,0x2020,0x2020,0x2020,0x2020},	//24通讯中断故障
 {0xC9E8,0xB1B8,0xD7D4,0xC6F4,0xB6AF,0xCAA7,0xB0DC,0xB9CA,0xD5CF,0x2020},	//25设备自启动失败故障
 {0xCDE2,0xB2BF,0xB4E6,0xB4A2,0xC6F7,0xB9CA,0xD5CF,0x2020,0x2020,0x2020},	//26外部存储器故障
 {0xBDD3,0xB4A5,0xC6F7,0xB9CA,0xD5CF,0x2020,0x2020,0x2020,0x2020,0x2020},	//27接触器故障
 {0xB3E4,0xB5E7,0xB5E7,0xD7E8,0xB9CA,0xD5CF,0x2020,0x2020,0x2020,0x2020},	//28充电电阻故障
 {0xB6E0,0xB4CE,0xCFDE,0xC8DD,0xB9CA,0xD5CF,0x2020,0x2020,0x2020,0x2020},   //29多次限容故障
 {0xBBA5,0xB8D0,0xC6F7,0xB5E7,0xC1F7,0xD4A4,0xB1A8,0xBEAF,0x2020,0x2020},   //30电流互感器预报警
 {0xB5E7,0xCDF8,0xC6B5,0xC2CA,0xD2EC,0xB3A3,0xB8E6,0xBEAF,0x2020,0x2020},   //31电网频率异常告警
 {0xD3B2,0xBCFE,0xB9FD,0xC1F7,0xB8E6,0xBEAF,0x2020,0x2020,0x2020,0x2020},   //32硬件过流告警
 {0xCAD6,0xB6AF,0xC6F4,0xB6AF,0xC9E8,0xB1B8,0xC3FC,0xC1EE,0x2020,0x2020},   //33手动启动设备命令  手动隐藏操作
 {0xCAD6,0xB6AF,0xCDA3,0xD6B9,0xC9E8,0xB1B8,0xC3FC,0xC1EE,0x2020,0x2020},   //34手动停止设备命令  手动隐藏操作
 {0xCFD4,0xCABE,0xB5A5,0xD4AA,0xC9CF,0xB5E7,0x2020,0x2020,0x2020,0x2020},   //35显示单元上电  手动隐藏操作
 {0xB9FD,0xC8DD,0xCFDE,0xC1F7,0xB8E6,0xBEAF,0x2020,0x2020,0x2020,0x2020},   //36过容限流告警
 {0xCDE2,0xB2BF,0xB0B4,0xC5A5,0xC6F4,0xB6AF,0xC9E8,0xB1B8,0xC3FC,0xC1EE},   //37外部按钮启动设备命令
 {0xCDE2,0xB2BF,0xB0B4,0xC5A5,0xCDA3,0xD6B9,0xC9E8,0xB1B8,0xC3FC,0xC1EE},   //38外部按钮停止设备命令
 {0xB6A8,0xCAB1,0xC6F4,0xB6AF,0xC9E8,0xB1B8,0xC3FC,0xC1EE,0x2020,0x2020},   //39定时启动设备命令
 {0xB6A8,0xCAB1,0xCDA3,0xD6B9,0xC9E8,0xB1B8,0xC3FC,0xC1EE,0x2020,0x2020},   //40定时停止设备命令
 {0xCAD6,0xB6AF,0xCFFB,0xD5CF,0xC3FC,0xC1EE,0x2020,0x2020,0x2020,0x2020},   //41手动消障命令
 {0x4d6f,0x6462,0x7573,0xC6F4,0xB6AF,0xC9E8,0xB1B8,0xC3FC,0xC1EE,0x2020},   //42 Modbus启动设备命令
 {0x4d6f,0x6462,0x7573,0xCDA3,0xD6B9,0xC9E8,0xB1B8,0xC3FC,0xC1EE,0x2020},   //43 Modbus停止设备命令
 {0xBFD8,0xD6C6,0xB5A5,0xD4AA,0xB5F4,0xB5E7,0x2020,0x2020,0x2020,0x2020},   //44控制单元掉电
 {0xBFD8,0xD6C6,0xB5A5,0xD4AA,0xC9CF,0xB5E7,0x2020,0x2020,0x2020,0x2020},   //45控制单元上电
 {0x2041,0xCFE0,0xD6B1,0xC1F7,0xB2E0,0xB9FD,0xD1B9,0xB8E6,0xBEAF,0x2020},	//46 A相直流侧过压告警
 {0x2042,0xCFE0,0xD6B1,0xC1F7,0xB2E0,0xB9FD,0xD1B9,0xB8E6,0xBEAF,0x2020},	//47 B相直流侧过压告警
 {0x2043,0xCFE0,0xD6B1,0xC1F7,0xB2E0,0xB9FD,0xD1B9,0xB8E6,0xBEAF,0x2020},	//48 C相直流侧过压告警
 {0xC4A3,0xBFE9,0x2041,0xB9FD,0xCEC2,0xB9CA,0xD5CF,0x2020,0x2020,0x2020},   //49 模块A过温故障
 {0xC4A3,0xBFE9,0x2042,0xB9FD,0xCEC2,0xB9CA,0xD5CF,0x2020,0x2020,0x2020},   //50 模块B过温故障
 {0xC4A3,0xBFE9,0x2043,0xB9FD,0xCEC2,0xB9CA,0xD5CF,0x2020,0x2020,0x2020},   //51 模块C过温故障
 {0xB6A8,0xCAB1,0xB4FD,0xBBFA,0xC9E8,0xB1B8,0xC3FC,0xC1EE,0x2020,0x2020},	//52 定时待机设备命令
 {0x4d6f,0x6462,0x7573,0xB4FD,0xBBFA,0xC9E8,0xB1B8,0xC3FC,0xC1EE,0x2020},	//53 Modbus待机设备命令
 {0x4d6f,0x6462,0x7573,0xCFFB,0xD5CF,0xC9E8,0xB1B8,0xC3FC,0xC1EE,0x2020},	//54 Modbus消障设备命令
 {0x2047,0x534d,0xC6F4,0xB6AF,0xC9E8,0xB1B8,0xC3FC,0xC1EE,0x2020,0x2020},	//55 GSM启动设备命令
 {0x2047,0x534d,0xCDA3,0xD6B9,0xC9E8,0xB1B8,0xC3FC,0xC1EE,0x2020,0x2020},	//56 GSM停止设备命令
 {0x2047,0x534d,0xB4FD,0xBBFA,0xC9E8,0xB1B8,0xC3FC,0xC1EE,0x2020,0x2020},	//57 GSM待机设备命令
 {0x2047,0x534d,0xCFFB,0xD5CF,0xC9E8,0xB1B8,0xC3FC,0xC1EE,0x2020,0x2020},	//58 GSM消障设备命令
 {0xD6F7,0xBFD8,0xD6D0,0xB6CF,0xD2E7,0xB3F6,0xB9CA,0xD5CF,0x2020,0x2020},   //59 主控中断溢出故障
 {0xD6B1,0xC1F7,0xB2E0,0xB7C5,0xB5E7,0xD6D0,0x2020,0x2020,0x2020,0x2020},   //60 直流侧放电中
 {0xB8BA,0xD4D8,0x4354,0xBDD3,0xB7A8,0xB4ED,0xCEF3,0xB9CA,0xD5CF,0x2020},	//61 负载CT接法错误故障
 {0xB7C0,0xC0D7,0xB1A3,0xBBA4,0xC6F7,0xB9CA,0xD5CF,0x2020,0x2020,0x2020},	//62 防雷保护器故障
 {0xB7C5,0xB5E7,0xB5E7,0xC2B7,0xB9CA,0xd5CF,0x2020,0x2020,0x2020,0X2020},   //63 放电电路故障
 {0xBCCC,0xB5E7,0xC6F7,0xB9D8,0xB6CF,0xB9CA,0xD5CF,0x2020,0x2020,0X2020},    //64 继电器关断故障
 {0xD6F7,0xBFD8,0xB3CC,0xD0F2,0xC9D5,0xD0B4,0xB4ED,0xCEF3,0xB9CA,0xD5CF},   //65主控程序烧写错误故障
 {0xD6B1,0xC1F7,0xB2E0,0xB5E7,0xD1B9,0xD3B2,0xBCFE,0xB1A3,0xBBA4,0X2020},   //66直流侧电压硬件保护
};

const unsigned int MODE_num_com[][4]=//设备运行状态
{
	{0x2020,0x2020,0x2020,0x2020},//空的
	{0xC4A3,0xBFE9,0xD2BB,0x3a20},//模块一
	{0xC4A3,0xBFE9,0xB6FE,0x3a20},//模块二
	{0xC4A3,0xBFE9,0xC8FD,0x3a20},//模块三
	{0xC4A3,0xBFE9,0xCBC4,0x3a20},//模块四
	{0xC4A3,0xBFE9,0xCEE5,0x3a20},//模块五
	{0xC4A3,0xBFE9,0xC1F9,0x3a20},//模块六
	{0xC4A3,0xBFE9,0xC6DF,0x3a20},//模块七
	{0xC4A3,0xBFE9,0xB0CB,0x3a20},//模块八
};



const unsigned int MESSAGE_com[][12]=//提示显示
{
	{0x2020,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020},//空
	{0xC3DC,0xC2EB,0xCAE4,0xC8EB,0xB4ED,0xCEF3,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020},//1 密码输入错误
	{0xC0FA,0xCAB7,0xBCC7,0xC2BC,0xD2D1,0xBEAD,0xC7E5,0xBFD5,0x2020,0x2020,0x2020,0x2020},//2 历史记录已经清空
	{0xCFD4,0xCABE,0xBDE7,0xC3E6,0xD2D1,0xBEAD,0xBBD6,0xB8B4,0xB3F6,0xB3A7,0xC9E8,0xD6C3},//3 显示界面已经恢复出厂设置
	{0xC4FA,0xCAE4,0xC8EB,0xB5C4,0xB2CE,0xCAFD,0xB3AC,0xB3F6,0xC9E8,0xD6C3,0xB7B6,0xCEA7},//4 您输入的参数超出设置范围
	{0xC4FA,0xCAE4,0xC8EB,0xB5C4,0xB2CE,0xCAFD,0xB5CD,0xD3DA,0xC9E8,0xD6C3,0xB7B6,0xCEA7},//5 您输入的参数低于设置范围
	{0xC9E8,0xB1B8,0xCDA8,0xD1B6,0xD6D0,0xB6CF,0x2c20,0xC7EB,0xB0B4,0xCFC2,0xBCB1,0xCDA3},//6 如需停止设备,请按下急停 all time
	{0xB5B1,0xC7B0,0xB9CA,0xD5CF,0xD7B4,0xCCAC,0x2c20,0xC3FC,0xC1EE,0xCEDE,0xD0A7,0x2020},//7 当前故障状态，命令无效  //no
	{0xCDA8,0xD1B6,0xD6D0,0xB6CF,0xD7B4,0xCCAC,0x2c20,0xC3FC,0xC1EE,0xCEDE,0xD0A7,0x2020},//8 通讯中断状态，命令无效
	{0xB5B1,0xC7B0,0xBCB1,0xCDA3,0xD7B4,0xCCAC,0x2c20,0xC3FC,0xC1EE,0xCEDE,0xD0A7,0x2020},//9 当前急停状态，命令无效
	{0xCFD4,0xCABE,0xC4A3,0xBFE9,0xD2D1,0xCBF8,0xB6A8,0x2020,0x2020,0x2020,0x2020,0x2020},//10显示模块已锁定          all time
	{0xCFD4,0xCABE,0xC4A3,0xBFE9,0xD2D1,0xBCA4,0xBBEE,0x2020,0x2020,0x2020,0x2020,0x2020},//11显示模块已激活
	{0xBBA5,0xB8D0,0xC6F7,0xB5E7,0xC1F7,0xD4A4,0xB1A8,0xBEAF,0x2020,0x2020,0x2020,0x2020},//12互感器电流预报警        提示位：1
	{0xD2BA,0xBEA7,0xC6C1,0xB4E6,0xB4A2,0xC6F7,0xB6C1,0xD0B4,0xCAA7,0xB0DC,0x2020,0x2020},//13液晶屏存储器读写失败
	{0xCFB5,0xCDB3,0xB5F7,0xCAD4,0xC7EB,0xC7D0,0xBBBB,0xB5BD,0xBEDF,0xCCE5,0xC4A3,0xBFE9},//14系统调试请切换到具体模块
	{0xC9E8,0xB1B8,0x4944,0xD2D1,0xB7A2,0xCBCD,0x2020,0x2020,0x2020,0x2020,0x2020,0x2020},//15设备ID已发送	
	{0xCDA8,0xD0C5,0xD7D4,0xBCEC,0xD6D0,0x2e2e,0x2e2e,0x2e2e,0x2020,0x2020,0x2020,0x2020},//16通信自检中.......    提示位：2
    {0xCDA8,0xD0C5,0xD6D0,0xB6CF,0x2e2e,0x2e2e,0x2e2e,0x2020,0x2020,0x2020,0x2020,0x2020},//17通信中断.....		 提示位：3
	{0xB5E7,0xCDF8,0xD7D4,0xBCEC,0xD6D0,0x2e2e,0x2e2e,0x2e2e,0x2020,0x2020,0x2020,0x2020},//18电网自检中......	 提示位：4
	{0xD4CB,0xD0D0,0xCAFD,0xBEDD,0xB3F5,0xCABC,0xBBAF,0xD7D4,0xBCEC,0xD6D0,0x2e2e,0x2e2e},//19运行数据初始化自检中.提示位：5
	{0xC9E8,0xB1B8,0xD7B4,0xCCAC,0xD7D4,0xBCEC,0xD6D0,0x2e2e,0x2e2e,0x2e2e,0x2020,0x2020},//20设备状态自检中...... 提示位：6
	{0xD7D4,0xBCEC,0xCDEA,0xB1CF,0xC9E8,0xB1B8,0xD5FD,0xB3A3,0x2020,0x2020,0x2020,0x2020},//21自检完毕设备正常     提示位：7
};


//**********80参数范围**************
const int PARAMETER1_range[][2]=//范围
{
	{0,2},   //是否是三相四线
	{0,9999},//负载侧互感器规格
	{0,9999},//系统侧互感器规格
	{0,9999},//额定容量
	{-100,100},//直流侧电压偏置
	{0,4},   //是否指定补偿
	{0,1},   //备用
	{0,1},   //
	{0,1},	 //
};

const int PARAMETER2_range[][2]=//范围
{
	{-999,999},//电流比例系数
	{-999,999},//电流积分常数
	{-999,999},//电压比例系数
	{-999,999},//电压积分常数
	{-999,999},//电容中心比例系数
	{-999,999},//电容中心积分常数
	{-999,999},//直流侧设定值
	{-999,999},//电流外环比例系数
	{-999,999},//电流外环积分常数	
};	

const int PARAMETER3_range[][2]=//范围
{
	{-999,999},//
	{-999,999},//
	{-999,999},//
	{-999,999},//
	{-999,999},//
	{-999,999},// 
	{0,1},//是否手动指定
	{0,9999},//并机总容量
	{0,9999},//显示容量
};

const int PARAMETER4_range[][2]=//范围
{
	{0,999},//电网欠压值
	{0,999},//电网过压值
	{0,9999},//电流过流保护
	{0,9999},//直流侧预过压
	{0,9999},//直流侧实过压
	{0,999},//电容过压保护
	{0,999},//
	{0,1},//
	{0,1},//是否自动并机
};

const int PARAMETER5_range[][2]=//范围 指定比例
{
	{0,100},//
	{0,100},//
	{0,100},//
	{0,100},//
	{0,100},//
	{0,100},//
	{0,100},//
	{0,100},//
	{0,100},//
};
const int PARAMETER6_range[][2]=//范围 前7个是指定比例，后两个是是否CT相序保护和互感器电流上限
{
	{0,100},
	{0,100},
	{0,100},
	{0,100},
	{0,1},//是否防雷保护
	{0,100},//负载检测补偿值
	{0,1},//是否环境温度限容
	{0,1},//是否CT相序保护
	{0,100},//互感器电流上限
};
const int PARAMETER8_range[][2]=//范围 指定比例
{
	{0,1}, //
	{0,100}, //
	{0,20},//
	{0,20},//
	{0,20},//
	{0,9999}, //备用
	{0,9999}, //备用
	{0,9999}, //备用
	{90,100}, //指定功率因数
};


//**********SVG SVG++参数范围**************
const int PARAMETER1_Srange[][2]=//范围
{
	{0,1},   //是否是三相四线
	{0,9999},//负载侧互感器规格
	{0,9999},//系统侧互感器规格
	{0,9999},//额定容量
	{90,100},//指定功率因数
	{0,2},   //负载系统互感器
	{-100,100}, //直流侧电压偏置
	{0,9999},   //直流侧给定值
	{0,9999},	//并机总容量
};

const int PARAMETER2_Srange[][2]=//范围
{
	{0,200},//电流比例系数
	{0,10000},//电流积分常数
	{0,200},//电压比例系数
	{0,200},//电压积分常数
	{0,100},//互感器电流上限
	{0,200},//电流外环比例系数
	{0,10000},//电流外环积分常数
	{0,200},//
	{0,200},//
	
};	

const int PARAMETER3_Srange[][2]=//范围
{
	{0,32767},//直流电压检测比
	{0,32767},//电网电压检测比
	{0,20000},//负载电流检测比
	{0,9999},//反馈电流检测比
	{0,16},//输出补偿比例
	{0,9999},//显示容量
	{0,30},//设置共补组数 SVG++
	{0,10},//设置分补组数 SVG++
	{0,9999},//
};

const int PARAMETER4_Srange[][2]=//范围
{
	{0,999},//电网欠压值
	{0,999},//电网过压值
	{0,9999},//电流过流保护
	{0,9999},//直流侧预过压
	{0,9999},//直流侧实过压
	{0,999},//电容过压保护
	{0,1},//
	{0,1},//
	{0,1},//是否环境温度限容
};

const int PARAMETER5_Srange[][2]=//范围
{
	{0,4},  //运行模式
	{0,999},//中线限容值
	{0,1},  //是否自动并机
	{-999,999},//直流侧预过压
	{-999,999},//直流侧实过压
	{-999,999},//电容过压保护
	{0,1},//电容欠压保护
	{0,1},//是否断电自启
	{0,1},//是否重复控制
};

const int PARAMETER6_Srange[][2]=//范围
{
	{0,100},
	{0,100},
	{0,100},
	{0,100},
	{0,100},
	{0,100},
	{0,100},
	{0,1},//是否CT相序保护
	{0,1},//是否防雷保护
};

const int PARAMETER7_Srange[][2]=//范围 指定比例
{
	{0,1}, //
	{0,100}, //
	{0,20},//
	{0,20},//
	{0,20},//
	{0,9999}, //备用
	{0,9999}, //备用
	{0,9999}, //备用
	{0,100}, //负载检测补偿值
};


const unsigned char AT[]=//AT
{
	'A','T','\r'	
};

const unsigned char AT_CMGF[]=//AT+CMGF=0
{
	'A','T','+','C','M','G','F','=','0','\r'	
};

const unsigned char AT_CMGS[]=//AT+CMGS=
{
	'A','T','+','C','M','G','S','='
};

const unsigned char AT_CMGR[]=//AT+CMGR=
{
	'A','T','+','C','M','G','R','=','1','\r'
};

const unsigned char AT_CMGD[]=//AT+CMGD=12
{
	'A','T','+','C','M','G','D','=','1','\r'
};

const unsigned char AT_CSCA[]=//AT+CSCA?=9
{
	'A','T','+','C','S','C','A','?','\r'
};

const unsigned int PARAMETER[][8][9]=//
{
  {	
	{1,1,1,1,1,1,1,1,1},      			//0  APF-80
	{1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},      			
	{1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},
  },
  {	
	{1,1,1,1,1,1,1,1,1}, 			    //1  APF
	{100,100,100,1,100,1,1,100,100},
	{1000,1000,10,100,100,1,1,10,10},
	{1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},//备用
	{1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},
  },
  {	
	{1,1,1,1,100,1,10,1,1}, 			//2  SVG-S-A
	{100,100,100,1,10,100,100,100,1},
	{1000,1000,10,100,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},//备用
  },
  {	
	{1,1,1,1,100,1,10,1,1}, 			//3  SVG-S-A
	{100,100,100,1,10,100,100,100,1},
	{1000,1000,10,100,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1},//备用
  }
};

const unsigned char APF_CHAR[]={'A','P','F'};
const unsigned char SVG_CHAR[]={'S','V','G'};
const unsigned char SVGPP_CHAR[]={'S','V','G','-','S','-','A'};
